CORS регулятор ajax запросов браузера с API 
site consist frontend & backend

запросы с сайта называются ajax

CORS - один источник 
server{
    location{
        add_header'Access-Conterol-Allow-Origin''a/com' always;
    or  add_header"Access-Conterol-Allow-Methods""GET,POST,OPTION,PUT" always;  -
    }
}
Типы CORS простой и предварительный 

считается когда простым когда GET HEAD POST
нет пользовательских заголовков

предварительным считается все остальные 

кеширование запросов : add_header"Access-Conterol-Max-Age" 86400

add_header"Access-Conterol-Allow-Heders""Content-Type" always;

add_header"Access-Conterol-Allow-Credentials""true" always;

                Open redirect CSRF

root-me.org - сайт для тестирования своих знаний проникновения 


1) open redirect- уязвимость позволяющая путем манипуляции параметров URLперенаправить пользователя на ресурс не предусмотренный разработчиком 
цель - фишинг 

<?php
$redirect_url - $_GET('url');
header("location: " . $redirect_url);
?>
тогда уязвимость будет: http://site.com/example.php?url-http:/evil/com

public class RedirectServlet extends HttpServlet (
    protected void doGet (HttpServletRequest request, HttpServletResponse response) throws
        string query = request.getQueryString();
        if (query.contains("url")) (
            String url +request.getParameter("url");
            response.sendRedirect(url);
        
        )
)
<a bref="http://bank.site.com/redirect?url=http://evil.com">Click her to log in</a>




2) CSRF Cross Site Redirect Forgery - межсайтовая подделка запроса или XSRF 
это: выполнение действий от имени пользователя с помощью повышения привелегий 

- account tokeover
- Privilege Escalation
- Remout code execution









